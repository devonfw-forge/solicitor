scancodeoptions="--processes 16 --copyright --only-findings --license --license-text --consolidate"
beginning=$(pwd)
mkdir scancodeOutput
so=$(pwd)/scancodeOutput
echo {\"artifacts\": [ > scancodeOutput/scancodeOut.json
dir=$(pwd)/Source

#foreach ($artifact in $ARTIFACTS)
if [ ! -f $dir/$purlhandler.pathFor($artifact.packageUrl)/scancode.json ] || [ ! -f $dir/$purlhandler.pathFor($artifact.packageUrl)/scancodeScan.completed ]
then
	rm $dir/$purlhandler.pathFor($artifact.packageUrl)/scancodeScan.completed
	rm $dir/$purlhandler.pathFor($artifact.packageUrl)/scancode.json
	if [ -d $dir/$purlhandler.pathFor($artifact.packageUrl)/sources ] && [ -f $dir/$purlhandler.pathFor($artifact.packageUrl)/sources.completed ]
	then
		scancode $scancodeoptions --json-pp $dir/$purlhandler.pathFor($artifact.packageUrl)/scancode.json $dir/$purlhandler.pathFor($artifact.packageUrl)/sources
		touch $dir/$purlhandler.pathFor($artifact.packageUrl)/scancodeScan.completed
	fi
fi
if 	[ -f $dir/$purlhandler.pathFor($artifact.packageUrl)/scancode.json ] && [ -f $dir/$purlhandler.pathFor($artifact.packageUrl)/scancodeScan.completed ]
	cat $dir/$purlhandler.pathFor($artifact.packageUrl)/scancode.json >> $so/scancodeOut.json
	printf "\n," >> $so/scancodeOut.json
fi
#end
	
printf "END" >> $so/scancodeOut.json
grep -v ",END" $so/scancodeOut.json > $so/scancodeOutput.json
rm $so/scancodeOut.json
echo ]} >> $so/scancodeOutput.json
mv $so/scancodeOutput.json $beginning

