## SPDX-License-Identifier: Apache-2.0
#
# This script was generated by 'Solicitor', v$MODELROOT.getDataRow(0).solicitorVersion ($MODELROOT.getDataRow(0).solicitorGitHash) on $MODELROOT.getDataRow(0).executionTime
# see https://github.com/devonfw/solicitor
#
# In order to use this function properly, a correct setup of scancode-toolkit is necessary. Download and install the newest version of scancode here: https://github.com/nexB/scancode-toolkit/releases
# It is important to note that scancode has to be put in the PATH variable and you are able to call the tool from everywhere in your system.
# After setting it up correctly, you just have to run the generated "scancode_projectname.sh" script to automatically download package sources, scan them via scancode and store
# the results in directory tree within folder "Source".

mkdir Source
cd Source
#[[SD=$(pwd)]]#
echo "These artifacts need to be downloaded manually:" > need-to-retrieve-manually.txt


#foreach ($artifact in $ARTIFACTS)
# Group: $artifact.groupId -- Artifact: $artifact.artifactId -- Version: $artifact.version -- License(s): $artifact.effectiveNormalizedLicense -- includeSource: $artifact.includeSource

	if [ ! -d "$purlhandler.pathFor($artifact.packageUrl)" ]
	then
		mkdir -p $purlhandler.pathFor($artifact.packageUrl)
		cd $purlhandler.pathFor($artifact.packageUrl)
		curl -# $purlhandler.sourceDownloadUrlFor($artifact.packageUrl) -o sources.$purlhandler.sourceArchiveSuffixFor($artifact.packageUrl)
		#if ( $purlhandler.sourceArchiveSuffixFor($artifact.packageUrl) == "jar" )
		unzip -q -d sources sources.$purlhandler.sourceArchiveSuffixFor($artifact.packageUrl)
		#elseif($purlhandler.sourceArchiveSuffixFor($artifact.packageUrl) == "tgz")
		mkdir sources
		tar -xvzf sources.tgz -C sources
		#elseif($purlhandler.sourceArchiveSuffixFor($artifact.packageUrl) == "tar.gz")
		mkdir sources
		tar -xvzf sources.tar.gz -C sources
		#else
		unzip -q nonexisting
		#end
		if [ $? -ne 0 ]
		then
			touch sources.failed
			rm sources.$purlhandler.sourceArchiveSuffixFor($artifact.packageUrl)
			rm -r sources
			#[[cd $SD]]#
			echo "Artifact $purlhandler.sourceDownloadUrlFor($artifact.packageUrl)" >> need-to-retrieve-manually.txt
		else
			#[[cd $SD]]#
		fi
	fi
#end

cd ..
mv Source/need-to-retrieve-manually.txt need-to-retrieve-manually.txt
#[[sh scancodeScan.sh]]#