## SPDX-License-Identifier: Apache-2.0
#
# This script was generated by 'Solicitor', v$MODELROOT.getDataRow(0).solicitorVersion ($MODELROOT.getDataRow(0).solicitorGitHash) on $MODELROOT.getDataRow(0).executionTime
# see https://github.com/devonfw/solicitor
# This script downloads the sources for components, which have the "includeSource" flag set to "yes".

#foreach ($artifact in $ARTIFACTS)
# Application: $artifact.applicationName -- Group: $artifact.groupId -- Artifact: $artifact.artifactId -- Version: $artifact.version -- License(s): $artifact.effectiveNormalizedLicense -- includeSource: $artifact.includeSource
	mkdir $artifact.applicationName &> /dev/null
	cd $artifact.applicationName
	#if ( $artifact.packageUrl == "NA" )
		echo "No PackageUrl available: Artifact Group: $artifact.groupId -- Artifact: $artifact.artifactId -- Version: $artifact.version" >> need-to-retrieve-manually.txt
	#else
			curl -# $purlhandler.sourceDownloadUrlFor($artifact.packageUrl) -o ${artifact.groupId}--${artifact.artifactId}-${artifact.version}-sources.${purlhandler.sourceArchiveSuffixFor($artifact.packageUrl)}
			#if ( $purlhandler.sourceArchiveSuffixFor($artifact.packageUrl) == "jar" )
			unzip -q -t ${artifact.groupId}--${artifact.artifactId}-${artifact.version}-sources.jar
			#elseif($purlhandler.sourceArchiveSuffixFor($artifact.packageUrl) == "tgz")
			tar -xvzf ${artifact.groupId}--${artifact.artifactId}-${artifact.version}-sources.tgz
			#elseif($purlhandler.sourceArchiveSuffixFor($artifact.packageUrl) == "tar.gz")
			tar -xvzf ${artifact.groupId}--${artifact.artifactId}-${artifact.version}-sources.tar.gz
			#else
			unzip -q nonexisting
			#end
			if [ $? -ne 0 ]
			then
  				echo "Could not be downloaded: ${artifact.groupId}--${artifact.artifactId}-${artifact.version}-sources.${purlhandler.sourceArchiveSuffixFor($artifact.packageUrl)}" >> need-to-retrieve-manually.txt
  				rm ${artifact.groupId}--${artifact.artifactId}-${artifact.version}-sources.${purlhandler.sourceArchiveSuffixFor($artifact.packageUrl)}
			fi	
	#end
	rm -rf package/
	cd ..
#end
