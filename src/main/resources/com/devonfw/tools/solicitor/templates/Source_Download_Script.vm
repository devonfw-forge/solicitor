## SPDX-License-Identifier: Apache-2.0
#
# This script was generated by 'Solicitor', v$MODELROOT.getDataRow(0).solicitorVersion ($MODELROOT.getDataRow(0).solicitorGitHash) on $MODELROOT.getDataRow(0).executionTime
# see https://github.com/devonfw-forge/solicitor
#


mkdir $ARTIFACTS.getDataRow(0).applicationName &> /dev/null
cd $ARTIFACTS.getDataRow(0).applicationName
#[[SD=$(pwd)]]#
echo "These artifacts need to be downloaded manually:" > need-to-retrieve-manually.txt


#foreach ($artifact in $ARTIFACTS)
# Application: $artifact.applicationName -- Group: $artifact.groupId -- Artifact: $artifact.artifactId -- Version: $artifact.version -- License(s): $artifact.effectiveNormalizedLicense -- includeSource: $artifact.includeSource

	#if ( $artifact.artifactId.toString().contains("/") )
		cutArtifact='${artifact.artifactId}'

		if [[ ! -d "#[[${cutArtifact%/*}+${cutArtifact#*/}]]#-$artifact.version" ]]
		then
			mkdir #[[${cutArtifact%/*}+${cutArtifact#*/}]]#-$artifact.version &> /dev/null
			cd #[[${cutArtifact%/*}+${cutArtifact#*/}]]#-$artifact.version
			#if ( $artifact.repoType == "npm" )
				curl -# https://registry.npmjs.org/$artifact.artifactId/-/#[[${cutArtifact#*/}]]#-${artifact.version}.tgz -o #[[${cutArtifact#*/}]]#-${artifact.version}.tgz
				tar -xvzf #[[${cutArtifact#*/}]]#-${artifact.version}.tgz
					if [ $? -ne 0 ]
					then
						cd ..
						echo "npm #[[${cutArtifact%/*}+${cutArtifact#*/}]]#-${artifact.version}.tgz" >> need-to-retrieve-manually.txt
						rm -r #[[${cutArtifact%/*}+${cutArtifact#*/}]]#-$artifact.version
					fi
				#[[cd $SD]]#
			#elseif ( $artifact.repoType == "yarn" )
				curl -# https://registry.yarnpkg.com/$artifact.artifactId/-/#[[${cutArtifact#*/}]]#-${artifact.version}.tgz -o #[[${cutArtifact#*/}]]#-${artifact.version}.tgz
				tar -xvzf #[[${cutArtifact#*/}]]#-${artifact.version}.tgz
					if [ $? -ne 0 ]
					then
						cd ..
						echo "yarn #[[${cutArtifact%/*}+${cutArtifact#*/}]]#-${artifact.version}.tgz" >> need-to-retrieve-manually.txt
						rm -r #[[${cutArtifact%/*}+${cutArtifact#*/}]]#-$artifact.version
					fi
				#[[cd $SD]]#
			#else
				cd ..
				echo "$artifact.groupId--$artifact.artifactId-${artifact.version} (unknown repoType)" >> need-to-retrieve-manually.txt
				rm -r #[[${cutArtifact%/*}+${cutArtifact#*/}]]#-$artifact.version
				#[[cd $SD]]#	
			#end
		fi	
	#else
		if [[ ! -d "$artifact.artifactId-$artifact.version" ]]
		then
			mkdir $artifact.artifactId-$artifact.version &> /dev/null
			cd $artifact.artifactId-$artifact.version
			#if ( $artifact.repoType == "maven" )
				curl -# https://repo1.maven.org/maven2/$artifact.groupIdT/$artifact.artifactId/$artifact.version/$artifact.artifactId-$artifact.version-sources.jar -o $artifact.groupId--$artifact.artifactId-$artifact.version-sources.jar
				unzip -q $artifact.groupId--$artifact.artifactId-$artifact.version-sources.jar
					if [ $? -ne 0 ]
					then
						cd ..
						echo "maven $artifact.groupId--$artifact.artifactId-$artifact.version-sources.jar" >> need-to-retrieve-manually.txt   
						rm -r $artifact.artifactId-$artifact.version				
					fi
				#[[cd $SD]]#
			#elseif ( $artifact.repoType == "npm" )
				curl -# https://registry.npmjs.org/$artifact.artifactId/-/$artifact.artifactId-${artifact.version}.tgz -o $artifact.artifactId-${artifact.version}.tgz
				tar -xvzf $artifact.artifactId-${artifact.version}.tgz
					if [ $? -ne 0 ]
					then
						cd ..
						echo "npm $artifact.artifactId-${artifact.version}.tgz" >> need-to-retrieve-manually.txt
						rm -r $artifact.artifactId-$artifact.version					
					fi
				#[[cd $SD]]#
			#elseif ( $artifact.repoType == "yarn" )
				curl -# https://registry.yarnpkg.com/$artifact.artifactId/-/$artifact.artifactId-${artifact.version}.tgz -o $artifact.artifactId-${artifact.version}.tgz
				tar -xvzf $artifact.artifactId-${artifact.version}.tgz
					if [ $? -ne 0 ]
					then
						cd ..
						echo "yarn $artifact.artifactId-${artifact.version}.tgz" >> need-to-retrieve-manually.txt
						rm -r $artifact.artifactId-$artifact.version					
					fi
				#[[cd $SD]]#
			#elseif ( $artifact.repoType == "pip" )
				art='${artifact.artifactId}'
				#[[firstChar=${art:0:1}]]#
				curl -# -L https://pypi.io/packages/source/#[[$firstChar]]#/$artifact.artifactId/$artifact.artifactId-${artifact.version}.tar.gz -o $artifact.artifactId-${artifact.version}.tar.gz
				tar -xvzf $artifact.artifactId-${artifact.version}.tar.gz
					if [ $? -ne 0 ]
					then
						cd ..
						echo "pip $artifact.artifactId-${artifact.version}.tar.gz" >> need-to-retrieve-manually.txt
						rm -r $artifact.artifactId-$artifact.version					
					fi
				#[[cd $SD]]#
			#else
				cd ..
				echo "$artifact.groupId--$artifact.artifactId-${artifact.version} (unknown repoType)" >> need-to-retrieve-manually.txt
				rm -r $artifact.artifactId-$artifact.version
				#[[cd $SD]]#				
			#end
		fi
	#end
#end