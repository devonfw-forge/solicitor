// SPDX-License-Identifier: Apache-2.0

template header
clientName
engagementName
applicationName
customerProvidesOss
groupId
artifactId
version
usagePattern
ossModified
effectiveNormalizedLicenseType
effectiveNormalizedLicense
legalApproved
legalComments

package com.devonfw.tools.solicitor.rules;

import com.devonfw.tools.solicitor.model.inventory.NormalizedLicense;
import com.devonfw.tools.solicitor.model.inventory.ApplicationComponent;
import com.devonfw.tools.solicitor.model.masterdata.Application;
import com.devonfw.tools.solicitor.model.masterdata.Engagement;

template "LegalEvaluation"

rule "Legal Evaluation @{row.rowNumber}" salience -@{row.rowNumber}
agenda-group "LegalEvaluation" 
    when
        $e : Engagement( 
        	clientName == "@{clientName}", 
        	engagementName == "@{engagementName}",
        	customerProvidesOss == @{customerProvidesOss},
        	$name :  engagementName )
        $a : Application( 
        	name == "@{applicationName}", 
        	engagement == $e )
        $ac : ApplicationComponent(
        	groupId == "@{groupId}", 
        	artifactId == "@{artifactId}", 
        	version == "@{version}",
        	usagePattern.name() == "@{usagePattern}",
        	ossModified == @{ossModified},
        	application == $a )
        $nl : NormalizedLicense(legalApproved == null,  
        	effectiveNormalizedLicenseType == "@{effectiveNormalizedLicenseType}",
        	effectiveNormalizedLicense == "@{effectiveNormalizedLicense}",
        	applicationComponent == $ac )
    then
        $nl.setLegalApproved( "@{legalApproved}" );
        $nl.setLegalComments( "@{legalComments}" );
        update($nl);
end
end template
